#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <cstring>
#include <queue>
#include <vector>
#include <set>
using namespace std;
const int N=1e6;
int e[N],ne[N],idx,h[N],w[N];
int n,m,k;
int d[N];
int vis[N];
int cnt[N];
void add(int x,int y,int z)
{
    e[idx]=y;
    w[idx]=z;
    ne[idx]=h[x];
    h[x]=idx++;
}
void spfa() {
    memset(d, 0x3f3f, sizeof d);
    d[1]=0;
    queue<int> q;
    q.push(1);
    vis[1]=1;
    while(q.size())
    {
        int u=q.front();
        q.pop();
        vis[u]=0;
        for(int i=h[u];i!=-1;i=ne[i])
        {
            int j=e[i];
            if(d[j]>d[u]+w[i])
            {
                d[j]=d[u]+w[i];
                if(!vis[j])
                {
                    q.push(j);
                    vis[j]=1;
                }
            }
        }
    }
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    cin >> n >> m;
    memset(h,-1,sizeof(h));
    for(int i=1;i<=m;i++)
    {
        int x,y,z;
        cin >> x >> y >> z;
        add(x,y,z);
    }
    spfa();
    if(d[n]>(0x3f3f3f3f/2))
    {
        cout << "impossible" << "\n";
    }
    else
    {
        cout << d[n] << "\n";
    }
    return 0;
}
