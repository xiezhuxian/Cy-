#include<iostream>
#include<algorithm>
#include<vector>
#include<map>
using namespace std;
const int N= 1e6+10;
vector<pair<int ,int>> add,quiry;
vector<int> alls;
map<int,int>mp;
int a[N];
int s[N];
int find(int x)
{
    int l=0;
    int r=alls.size()-1;
    while(l<r)
    {
        int mid= l+r >> 1;
        if(alls[mid]>=x)
        {
            r=mid;
        }
        else
        {
            l=mid+1;
        }
    }
    return r+1;
}
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int n,m;
    cin >> n >> m;
    for(int i=0;i<n;i++)
    {
        int x,c;
        cin >> x >> c;
        add.push_back({x,c});
        alls.push_back(x);
        //mp[x]+=c;
    }
    for(int i=0;i<m;i++)
    {
        int l,r;
        cin >> l >> r;
        quiry.push_back({l,r});
        alls.push_back(l);
        alls.push_back(r);
    }
    sort(alls.begin(),alls.end());
    alls.erase(unique(alls.begin(),alls.end()),alls.end());
    for(auto item: add)
    {
        int x=find(item.first);
        a[x]+=item.second;
    }
    // for(auto item: alls)
    // {
    //     a[j++]=mp[item];
    // }
    for(int i=1;i<=alls.size();i++)
    {
        s[i]=s[i-1]+a[i];
    }
    for(auto item: quiry)
    {
        int x=find(item.first);
        int y=find(item.second);
        cout << s[y]-s[x-1] << "\n";
    }
    return 0;
}
